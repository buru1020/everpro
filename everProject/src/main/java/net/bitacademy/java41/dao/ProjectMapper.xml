<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bitacademy.java41.dao.ProjectMapper">

	<select id="getUserProjectList" parameterType="string" resultType="ProjectEx">
		select a.PNO as no
			, a.TITLE
			, a.CONTENT
			, a.START_DATE as startDate
			, a.END_DATE as endDate
			, a.TAG
			, b.LEVEL
			, c.EMAIL as plEmail
			, c.MNAME as plName
			, c.TEL as plTel
		from SPMS_PRJS a
		     , (
		        select PNO, EMAIL, LEVEL
		         from SPMS_PRJMEMB 
		         where EMAIL = #{value}
		        ) b
		     , SPMS_MEMBS c
		 where a.PNO = b.PNO
		     and b.EMAIL = c.EMAIL
		 order by a.PNO desc
	</select>
	
	<select id="getProjectList" resultType="ProjectEx">
		select a.PNO as no
			, a.TITLE
			, a.CONTENT
			, a.START_DATE as startDate
			, a.END_DATE as endDate
			, a.TAG
			, a.LEVEL
			, a.EMAIL as plEmail
			, b.MNAME as plName
			, b.TEL as plTel
		 from (
		         select a.PNO, a.TITLE, a.CONTENT, a.START_DATE, a.END_DATE, a.TAG, b.LEVEL, b.EMAIL
		         from SPMS_PRJS a left join SPMS_PRJMEMB b on (a.PNO = b.PNO)
		         where 1=1
		             and b.LEVEL = 0 or b.LEVEL is null
		        ) a , SPMS_MEMBS b
		 where 1=1
		     and a.EMAIL = b.EMAIL
		 order by a.PNO desc
	</select>
	
	<select id="getProjectInfo" resultType="ProjectEx" parameterType="int">
 	    select a.PNO as no, a.TITLE, a.CONTENT, a.START_DATE as startDate,  
 	     		a.END_DATE as endDate, a.TAG, b.LEVEL, b.EMAIL as plEmail,  
 	     		b.MNAME as plName, b.TEL as plTel 
 		from SPMS_PRJS a  
 					left join ( 
 					select a.PNO, a.LEVEL, a.EMAIL, b.MNAME, b.TEL 
 		 			from SPMS_PRJMEMB a, SPMS_MEMBS b 
 		 			where a.EMAIL = b.EMAIL group by a.PNO) b  
 					on (a.PNO = b.PNO) 
 		where 1=1  
 		and a.PNO = #{value}
 		order by a.PNO desc 
	</select>
	
	<insert id="add" parameterType="Project"
		useGeneratedKeys="true" keyProperty="no">
		insert into SPMS_PRJS(TITLE,CONTENT,START_DATE,END_DATE,TAG)
		values(#{title},#{content},#{startDate},#{endDate},#{tag})
	</insert>
	
	<insert id="addProjectMember" parameterType="map">
		insert into SPMS_PRJMEMB(EMAIL,PNO,LEVEL)
		values(#{email},#{projectNo},#{memberLevel})
	</insert>
	
	<update id="update" parameterType="Project">
		update SPMS_PRJS set
			TITLE=#{title},
			CONTENT=#{content},
	 		START_DATE=#{startDate},
			END_DATE=#{endDate},
			TAG=#{tag}
		where PNO=#{no}
	</update>
	
	<delete id="delete" parameterType="int">
		delete from SPMS_PRJS 
		where PNO=#{value}
	</delete>
	
	<delete id="deleteProjectMember" parameterType="int">
		delete from SPMS_PRJMEMB 
		where PNO=#{value}
	</delete>
	
	<delete id="deleteProjectTask" parameterType="int">
		delete from SPMS_TASKS
		where PNO=#{value}
	</delete>


<!-- 	<select id="listByMember" parameterType="string" resultType="MemberProject">
		select t1.PNO as no, t1.TITLE, t2.LEVEL
		from SPMS_PRJS t1, SPMS_PRJMEMB t2
		where t1.PNO = t2.PNO and t2.EMAIL = #{value}
	</select>
	
	<select id="list" resultType="Project">
		select 
			PNO as no,
			TITLE,
			START_DATE as startDate,
			END_DATE as endDate
		from SPMS_PRJS
		order by PNO desc
	</select>
	
	<select id="get" parameterType="int" resultType="Project">
		select 
			PNO as no, 
			TITLE, 
			CONTENT, 
			START_DATE as startDate, 
			END_DATE as endDate, 
			TAG
		from SPMS_PRJS
		where PNO = #{value}
	</select>
	
	<insert id="add" parameterType="Project" useGeneratedKeys="true" keyProperty="no">
		insert into SPMS_PRJS( TITLE,CONTENT,START_DATE,END_DATE,TAG )
		values( #{title}, #{content}, #{startDate}, #{endDate}, #{tag} )
	</insert>
	
	<insert id="addProjectMember" parameterType="map" >
		insert into SPMS_PRJMEMB( EMAIL, PNO, LEVEL )
		values( #{email}, #{projectNo}, #{memberLevel} )
	</insert>
	
	<update id="update" parameterType="Project">
		update SMPS_PRJS
		<set>
			<if test="title != null">TITLE = #{title},</if>
			<if test="content != null">CONTENT = #{content},</if>
			<if test="startDate != null">START_DATE = #{startDate},</if>
			<if test="endDate != null">END_DATE = #{endDate},</if>
			<if test="tag != ''">TAG = #{tag}</if>
		</set>
	</update> -->
	
</mapper>


