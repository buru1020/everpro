<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bitacademy.java41.dao.MemberMapper">
	
	<select id="getMember" parameterType="map" resultType="Member">
		select EMAIL
			, MNAME as name
			, PWD as password
			, TEL
			, BLOG
			, REG_DATE as regDate
			, UPDATE_DATE as updateDate
			, ANO as addressNo
			, DET_ADDR as detailAddress
			, TAG
			, LEVEL
		from SPMS_MEMBS
		<where>
			<trim prefixOverrides="AND|OR">
				<if test="email != null">
					EMAIL = #{email}
				</if>
				<if test="password != null">
					and PWD = #{password}
				</if>
			</trim>
		</where>
	</select>
	
	<select id="getProjectMemberList" 
			parameterType="int" 
			resultType="ProjectMember">
	    		select a.PNO as no, 
	    			a.LEVEL as projectLevel, 
	    			a.EMAIL, 
	    			b.MNAME as name, 
	    			b.TEL, 
	    			b.BLOG, 
	    			b.ANO as addressNo, 
	    			b.DET_ADDR as detailAddress, 
	    			b.TAG, 
	    			b.LEVEL
				 from SPMS_PRJMEMB a , SPMS_MEMBS b
				 where a.EMAIL = b.EMAIL
				 and a.PNO =#{value}
				 order by a.LEVEL, b.MNAME
	</select>	
	
	<insert id="addMember" parameterType="Member">
		insert into SPMS_MEMBS( EMAIL, MNAME, PWD, TEL, BLOG, REG_DATE, UPDATE_DATE, DET_ADDR, TAG, LEVEL )
		values(#{email}, #{name}, #{password}, #{tel}, #{blog}, now(), now(), #{detailAddress}, #{tag}, #{level})
	</insert>
	
	
	<select id="getMemberList" resultType="Member">
		select EMAIL
			, MNAME as name
			, TEL
			, BLOG
			, ANO as addressNo
			, DET_ADDR as detailAddress
			, TAG
			, LEVEL
		from SPMS_MEMBS
		order by MNAME
	</select>
	
	<update id="updateMember" parameterType="Member">
		update SPMS_MEMBS 
		set MNAME=#{name}, TEL=#{tel}, BLOG=#{blog}, TAG=#{tag}, UPDATE_DATE=now()
		where EMAIL=#{email}
	</update>
	
	
	<delete id="deleteProjectMember" parameterType="string">
		delete from SPMS_PRJMEMB
		where EMAIL = #{value}
	</delete>
	
	<delete id="deleteMember" parameterType="string">
		delete from SPMS_MEMBS
		where EMAIL = #{value}
	</delete>
	
	<delete id="changePassword" parameterType="map">
		update SPMS_MEMBS 
		set PWD= #{newPassword}, UPDATE_DATE=now()
		where EMAIL = #{email} and PWD = #{oldPassword}
	</delete>

	<insert id="addPhoto" parameterType="map">
		insert into SPMS_MEMIMG(EMAIL,IMGURL)
		values(#{email},#{path})
	</insert>	

	<select id="listPhoto" parameterType="String" resultType="Photo">
   		select INO as no, IMGURL as filename
		from SPMS_MEMIMG
		where EMAIL=#{value}
		order by INO desc
	</select>
</mapper>


